2024-10-14 14:56:07,920: INFO => <module> | server started
server started
2024-10-14 15:08:47,127: INFO => <module> | server started
server started
2024-10-14 15:09:40,574: INFO => <module> | server started
server started
2024-10-14 15:15:52,043: INFO => <module> | server started
server started
2024-10-14 15:16:18,639: INFO => <module> | server started
server started
2024-10-21 19:18:53,029: INFO => <module> | server started
server started
2024-10-21 19:19:08,586: INFO => create_response | api response: {'status': 'success', 'data': {}}
api response: {'status': 'success', 'data': {}}
2024-10-21 19:26:22,298: INFO => <module> | server started
server started
2024-10-21 19:53:11,983: INFO => <module> | server started
server started
2024-10-22 12:07:03,748: INFO => <module> | server started
server started
2024-10-29 12:01:47,605: INFO => <module> | server started
server started
2024-11-08 11:04:48,520: INFO => <module> | server started
server started
2024-11-10 15:34:03,495: INFO => <module> | server started
server started
2024-11-10 15:51:39,926: INFO => <module> | server started
server started
2024-11-10 15:51:44,479: INFO => <module> | server started
server started
2024-11-10 16:29:14,630: INFO => <module> | server started
server started
2024-11-10 18:30:03,749: INFO => <module> | server started
server started
2024-11-10 18:30:10,299: INFO => <module> | server started
server started
2024-11-10 18:32:04,740: INFO => <module> | server started
server started
2024-11-10 18:32:31,221: INFO => <module> | server started
server started
2024-11-10 18:33:15,734: INFO => <module> | server started
server started
2024-11-10 18:34:04,288: INFO => <module> | server started
server started
2024-11-10 18:34:06,883: INFO => <module> | server started
server started
2024-11-10 18:34:23,612: ERROR => api_authenticate_user | exception in authenticating user: (mysql.connector.errors.ProgrammingError) 1146 (42S02): Table 'appointment_manager.user' doesn't exist
[SQL: INSERT INTO user (first_name, last_name, username, email, password, contact_number, fax_number, details_verified, last_pwd_change, is_active, is_deleted, failed_login_count, invalid_otp_count, created_on, modified_on) VALUES (%(first_name)s, %(last_name)s, %(username)s, %(email)s, %(password)s, %(contact_number)s, %(fax_number)s, %(details_verified)s, %(last_pwd_change)s, %(is_active)s, %(is_deleted)s, %(failed_login_count)s, %(invalid_otp_count)s, %(created_on)s, %(modified_on)s)]
[parameters: {'first_name': 'Hello', 'last_name': 'World', 'username': 'hellow@rover.info', 'email': 'hellow@rover.info', 'password': '$2b$12$w9n9yqNCf80bj66HTcNxK.Ffw//tfljgQWRp.Q5ZnRpgASs6thEbq', 'contact_number': None, 'fax_number': None, 'details_verified': 0, 'last_pwd_change': None, 'is_active': 1, 'is_deleted': 0, 'failed_login_count': 0, 'invalid_otp_count': 0, 'created_on': '2024-11-10 18:34:22', 'modified_on': '2024-11-10 18:34:22'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 706, in cmd_query
    self._cmysql.query(
_mysql_connector.MySQLInterfaceError: Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1146 (42S02): Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 36, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 29, in create_user
    user : UserModel = create_user_dao(db,user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 37, in create_user_dao
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 30, in create_user_dao
    db.flush([user])
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
sqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1146 (42S02): Table 'appointment_manager.user' doesn't exist
[SQL: INSERT INTO user (first_name, last_name, username, email, password, contact_number, fax_number, details_verified, last_pwd_change, is_active, is_deleted, failed_login_count, invalid_otp_count, created_on, modified_on) VALUES (%(first_name)s, %(last_name)s, %(username)s, %(email)s, %(password)s, %(contact_number)s, %(fax_number)s, %(details_verified)s, %(last_pwd_change)s, %(is_active)s, %(is_deleted)s, %(failed_login_count)s, %(invalid_otp_count)s, %(created_on)s, %(modified_on)s)]
[parameters: {'first_name': 'Hello', 'last_name': 'World', 'username': 'hellow@rover.info', 'email': 'hellow@rover.info', 'password': '$2b$12$w9n9yqNCf80bj66HTcNxK.Ffw//tfljgQWRp.Q5ZnRpgASs6thEbq', 'contact_number': None, 'fax_number': None, 'details_verified': 0, 'last_pwd_change': None, 'is_active': 1, 'is_deleted': 0, 'failed_login_count': 0, 'invalid_otp_count': 0, 'created_on': '2024-11-10 18:34:22', 'modified_on': '2024-11-10 18:34:22'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
exception in authenticating user: (mysql.connector.errors.ProgrammingError) 1146 (42S02): Table 'appointment_manager.user' doesn't exist
[SQL: INSERT INTO user (first_name, last_name, username, email, password, contact_number, fax_number, details_verified, last_pwd_change, is_active, is_deleted, failed_login_count, invalid_otp_count, created_on, modified_on) VALUES (%(first_name)s, %(last_name)s, %(username)s, %(email)s, %(password)s, %(contact_number)s, %(fax_number)s, %(details_verified)s, %(last_pwd_change)s, %(is_active)s, %(is_deleted)s, %(failed_login_count)s, %(invalid_otp_count)s, %(created_on)s, %(modified_on)s)]
[parameters: {'first_name': 'Hello', 'last_name': 'World', 'username': 'hellow@rover.info', 'email': 'hellow@rover.info', 'password': '$2b$12$w9n9yqNCf80bj66HTcNxK.Ffw//tfljgQWRp.Q5ZnRpgASs6thEbq', 'contact_number': None, 'fax_number': None, 'details_verified': 0, 'last_pwd_change': None, 'is_active': 1, 'is_deleted': 0, 'failed_login_count': 0, 'invalid_otp_count': 0, 'created_on': '2024-11-10 18:34:22', 'modified_on': '2024-11-10 18:34:22'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 706, in cmd_query
    self._cmysql.query(
_mysql_connector.MySQLInterfaceError: Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1146 (42S02): Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 36, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 29, in create_user
    user : UserModel = create_user_dao(db,user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 37, in create_user_dao
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 30, in create_user_dao
    db.flush([user])
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
sqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1146 (42S02): Table 'appointment_manager.user' doesn't exist
[SQL: INSERT INTO user (first_name, last_name, username, email, password, contact_number, fax_number, details_verified, last_pwd_change, is_active, is_deleted, failed_login_count, invalid_otp_count, created_on, modified_on) VALUES (%(first_name)s, %(last_name)s, %(username)s, %(email)s, %(password)s, %(contact_number)s, %(fax_number)s, %(details_verified)s, %(last_pwd_change)s, %(is_active)s, %(is_deleted)s, %(failed_login_count)s, %(invalid_otp_count)s, %(created_on)s, %(modified_on)s)]
[parameters: {'first_name': 'Hello', 'last_name': 'World', 'username': 'hellow@rover.info', 'email': 'hellow@rover.info', 'password': '$2b$12$w9n9yqNCf80bj66HTcNxK.Ffw//tfljgQWRp.Q5ZnRpgASs6thEbq', 'contact_number': None, 'fax_number': None, 'details_verified': 0, 'last_pwd_change': None, 'is_active': 1, 'is_deleted': 0, 'failed_login_count': 0, 'invalid_otp_count': 0, 'created_on': '2024-11-10 18:34:22', 'modified_on': '2024-11-10 18:34:22'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2024-11-10 18:34:23,622: ERROR => create_error_response | api response: {'status': 'failure', 'data': {'code': 5001, 'description': 'internal server error'}}
Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 706, in cmd_query
    self._cmysql.query(
_mysql_connector.MySQLInterfaceError: Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1146 (42S02): Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 36, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 29, in create_user
    user : UserModel = create_user_dao(db,user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 37, in create_user_dao
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 30, in create_user_dao
    db.flush([user])
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
sqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1146 (42S02): Table 'appointment_manager.user' doesn't exist
[SQL: INSERT INTO user (first_name, last_name, username, email, password, contact_number, fax_number, details_verified, last_pwd_change, is_active, is_deleted, failed_login_count, invalid_otp_count, created_on, modified_on) VALUES (%(first_name)s, %(last_name)s, %(username)s, %(email)s, %(password)s, %(contact_number)s, %(fax_number)s, %(details_verified)s, %(last_pwd_change)s, %(is_active)s, %(is_deleted)s, %(failed_login_count)s, %(invalid_otp_count)s, %(created_on)s, %(modified_on)s)]
[parameters: {'first_name': 'Hello', 'last_name': 'World', 'username': 'hellow@rover.info', 'email': 'hellow@rover.info', 'password': '$2b$12$w9n9yqNCf80bj66HTcNxK.Ffw//tfljgQWRp.Q5ZnRpgASs6thEbq', 'contact_number': None, 'fax_number': None, 'details_verified': 0, 'last_pwd_change': None, 'is_active': 1, 'is_deleted': 0, 'failed_login_count': 0, 'invalid_otp_count': 0, 'created_on': '2024-11-10 18:34:22', 'modified_on': '2024-11-10 18:34:22'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
api response: {'status': 'failure', 'data': {'code': 5001, 'description': 'internal server error'}}
Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 706, in cmd_query
    self._cmysql.query(
_mysql_connector.MySQLInterfaceError: Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
mysql.connector.errors.ProgrammingError: 1146 (42S02): Table 'appointment_manager.user' doesn't exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 36, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 29, in create_user
    user : UserModel = create_user_dao(db,user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 37, in create_user_dao
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 30, in create_user_dao
    db.flush([user])
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4352, in flush
    self._flush(objects)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4487, in _flush
    with util.safe_reraise():
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 4448, in _flush
    flush_context.execute()
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1418, in execute
    return meth(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/cursor_cext.py", line 357, in execute
    result = self._connection.cmd_query(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/opentelemetry/context_propagation.py", line 97, in wrapper
    return method(cnx, *args, **kwargs)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/mysql/connector/connection_cext.py", line 714, in cmd_query
    raise get_mysql_exception(
sqlalchemy.exc.ProgrammingError: (mysql.connector.errors.ProgrammingError) 1146 (42S02): Table 'appointment_manager.user' doesn't exist
[SQL: INSERT INTO user (first_name, last_name, username, email, password, contact_number, fax_number, details_verified, last_pwd_change, is_active, is_deleted, failed_login_count, invalid_otp_count, created_on, modified_on) VALUES (%(first_name)s, %(last_name)s, %(username)s, %(email)s, %(password)s, %(contact_number)s, %(fax_number)s, %(details_verified)s, %(last_pwd_change)s, %(is_active)s, %(is_deleted)s, %(failed_login_count)s, %(invalid_otp_count)s, %(created_on)s, %(modified_on)s)]
[parameters: {'first_name': 'Hello', 'last_name': 'World', 'username': 'hellow@rover.info', 'email': 'hellow@rover.info', 'password': '$2b$12$w9n9yqNCf80bj66HTcNxK.Ffw//tfljgQWRp.Q5ZnRpgASs6thEbq', 'contact_number': None, 'fax_number': None, 'details_verified': 0, 'last_pwd_change': None, 'is_active': 1, 'is_deleted': 0, 'failed_login_count': 0, 'invalid_otp_count': 0, 'created_on': '2024-11-10 18:34:22', 'modified_on': '2024-11-10 18:34:22'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
2024-11-10 18:36:50,911: INFO => <module> | server started
server started
2024-11-10 18:37:21,198: INFO => create_response | api response: {'status': 'success', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzMxMjQ1ODM2fQ.V5CBaQKhI3Sx_KbQp5cLHjkonTmPIaQm-RXlQ9XhWRw'}}
api response: {'status': 'success', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzMxMjQ1ODM2fQ.V5CBaQKhI3Sx_KbQp5cLHjkonTmPIaQm-RXlQ9XhWRw'}}
2024-11-10 18:42:49,199: INFO => <module> | server started
server started
2024-11-10 18:43:42,377: ERROR => api_authenticate_user | exception in authenticating user: Object of type datetime is not JSON serializable
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 42, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 34, in create_user
    access_token = create_access_token(
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/utilities/methods.py", line 55, in create_access_token
    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm="HS256")
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 68, in encode
    json_payload = self._encode_payload(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 95, in _encode_payload
    return json.dumps(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
exception in authenticating user: Object of type datetime is not JSON serializable
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 42, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 34, in create_user
    access_token = create_access_token(
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/utilities/methods.py", line 55, in create_access_token
    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm="HS256")
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 68, in encode
    json_payload = self._encode_payload(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 95, in _encode_payload
    return json.dumps(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
2024-11-10 18:43:42,378: ERROR => create_error_response | api response: {'status': 'failure', 'data': {'code': 5001, 'description': 'internal server error'}}
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 42, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 34, in create_user
    access_token = create_access_token(
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/utilities/methods.py", line 55, in create_access_token
    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm="HS256")
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 68, in encode
    json_payload = self._encode_payload(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 95, in _encode_payload
    return json.dumps(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
api response: {'status': 'failure', 'data': {'code': 5001, 'description': 'internal server error'}}
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 42, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 34, in create_user
    access_token = create_access_token(
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/utilities/methods.py", line 55, in create_access_token
    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm="HS256")
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 68, in encode
    json_payload = self._encode_payload(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/site-packages/jwt/api_jwt.py", line 95, in _encode_payload
    return json.dumps(
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/vanshpatel/miniconda3/envs/app-am1/lib/python3.10/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
2024-11-10 18:44:29,046: INFO => <module> | server started
server started
2024-11-10 18:44:36,380: INFO => create_response | api response: {'status': 'success', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzIiwiZXhwaXJlc19hdCI6IjIwMjQtMTEtMTAgMTk6MTQ6MzYiLCJleHAiOjE3MzEyNDYyNzZ9.CltnTqbqPkziAF8iuVFX30AFvWptMom-2pgJm4Nenc4'}}
api response: {'status': 'success', 'data': {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzIiwiZXhwaXJlc19hdCI6IjIwMjQtMTEtMTAgMTk6MTQ6MzYiLCJleHAiOjE3MzEyNDYyNzZ9.CltnTqbqPkziAF8iuVFX30AFvWptMom-2pgJm4Nenc4'}}
2024-11-10 19:03:52,675: INFO => <module> | server started
server started
2024-11-10 19:04:11,885: INFO => <module> | server started
server started
2024-11-10 19:04:29,865: ERROR => create_error_response | api response: {'status': 'failure', 'data': {'error_code': 2022, 'error_description': 'user_already_exist'}}
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 43, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 34, in create_user
    user : UserModel = create_user_dao(db,user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 43, in create_user_dao
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 21, in create_user_dao
    raise TSServerError(
core.error.TSServerError: ERROR(2022): user_already_exist
api response: {'status': 'failure', 'data': {'error_code': 2022, 'error_description': 'user_already_exist'}}
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 32, in api_authenticate_user
    response = create_user(db=db,request=request,user_data=user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 43, in create_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 34, in create_user
    user : UserModel = create_user_dao(db,user_data)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 43, in create_user_dao
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 21, in create_user_dao
    raise TSServerError(
core.error.TSServerError: ERROR(2022): user_already_exist
2024-11-13 13:34:47,982: INFO => <module> | server started
server started
2024-11-13 13:45:23,696: INFO => <module> | server started
server started
2024-11-13 13:46:59,316: INFO => <module> | server started
server started
2024-11-13 13:52:24,657: INFO => <module> | server started
server started
2024-11-13 14:30:29,931: INFO => <module> | server started
server started
2024-11-13 14:34:20,437: INFO => <module> | server started
server started
2024-11-13 14:35:39,888: INFO => <module> | server started
server started
2024-11-13 14:37:57,967: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:37:57,967: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7a4bcd3fb490>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7a4bcd3fb490>, 'user_id': 3}
2024-11-13 14:37:57,973: INFO => wrapper | total time for total_otp_request: 0.0063092708587646484
total time for total_otp_request: 0.0063092708587646484
2024-11-13 14:37:57,974: INFO => wrapper | response from function: total_otp_request: 0
response from function: total_otp_request: 0
2024-11-13 14:37:57,975: ERROR => validate_user_login_and_create_otp | exception in validate_user_login: 'CRUDUser' object has no attribute 'reset_failed_login'
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 136, in validate_user_login_and_create_otp
    crud.User.reset_failed_login(db=db, user_id=user.id)
AttributeError: 'CRUDUser' object has no attribute 'reset_failed_login'
exception in validate_user_login: 'CRUDUser' object has no attribute 'reset_failed_login'
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 136, in validate_user_login_and_create_otp
    crud.User.reset_failed_login(db=db, user_id=user.id)
AttributeError: 'CRUDUser' object has no attribute 'reset_failed_login'
2024-11-13 14:37:57,976: ERROR => create_error_response | api response: {'status': 'failure', 'data': {'error_code': 5001, 'error_description': 'internal server error'}}
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 136, in validate_user_login_and_create_otp
    crud.User.reset_failed_login(db=db, user_id=user.id)
AttributeError: 'CRUDUser' object has no attribute 'reset_failed_login'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 56, in api_authenticate_user
    response = login_user(db=db,request=request,user=user)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 83, in login_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 78, in login_user
    valid_user =_authenticate_user(
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 130, in _authenticate_user
    raise dp_err
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 114, in _authenticate_user
    otp, total_attempts = validate_user_login_and_create_otp(db=db, user=user, password=password)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 151, in validate_user_login_and_create_otp
    raise TSServerError()
core.error.TSServerError: ERROR(5001): internal server error
api response: {'status': 'failure', 'data': {'error_code': 5001, 'error_description': 'internal server error'}}
Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 136, in validate_user_login_and_create_otp
    crud.User.reset_failed_login(db=db, user_id=user.id)
AttributeError: 'CRUDUser' object has no attribute 'reset_failed_login'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/api/api_v1/endpoints/auth.py", line 56, in api_authenticate_user
    response = login_user(db=db,request=request,user=user)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 83, in login_user
    raise e
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 78, in login_user
    valid_user =_authenticate_user(
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 130, in _authenticate_user
    raise dp_err
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/services/auth_service.py", line 114, in _authenticate_user
    otp, total_attempts = validate_user_login_and_create_otp(db=db, user=user, password=password)
  File "/home/vanshpatel/appointment-manager/Appointment-Manager-BE/app/dao/user.py", line 151, in validate_user_login_and_create_otp
    raise TSServerError()
core.error.TSServerError: ERROR(5001): internal server error
2024-11-13 14:38:56,895: INFO => <module> | server started
server started
2024-11-13 14:39:12,884: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:39:12,886: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
2024-11-13 14:39:12,903: INFO => wrapper | total time for total_otp_request: 0.017198801040649414
total time for total_otp_request: 0.017198801040649414
2024-11-13 14:39:12,905: INFO => wrapper | response from function: total_otp_request: 0
response from function: total_otp_request: 0
2024-11-13 14:39:15,120: INFO => reset_failed_login | resetting failed login count for user_id: 3
resetting failed login count for user_id: 3
2024-11-13 14:39:16,022: INFO => wrapper | creating otp for user
creating otp for user
2024-11-13 14:39:16,027: INFO => wrapper | create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
2024-11-13 14:39:16,030: INFO => wrapper | invalidating previously assigned otp(s) for user
invalidating previously assigned otp(s) for user
2024-11-13 14:39:16,033: INFO => wrapper | invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
2024-11-13 14:39:16,042: INFO => wrapper | total time for invalidate_previous_otp: 0.00895237922668457
total time for invalidate_previous_otp: 0.00895237922668457
2024-11-13 14:39:16,043: INFO => wrapper | response from function: invalidate_previous_otp: None
response from function: invalidate_previous_otp: None
2024-11-13 14:39:16,055: INFO => wrapper | total time for create_otp: 0.027904510498046875
total time for create_otp: 0.027904510498046875
2024-11-13 14:39:16,056: INFO => wrapper | response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x75c591ecb8b0>
response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x75c591ecb8b0>
2024-11-13 14:39:17,642: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:39:17,644: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3dc0>, 'user_id': 3}
2024-11-13 14:39:17,652: INFO => wrapper | total time for total_otp_request: 0.00717926025390625
total time for total_otp_request: 0.00717926025390625
2024-11-13 14:39:17,653: INFO => wrapper | response from function: total_otp_request: 1
response from function: total_otp_request: 1
2024-11-13 14:39:21,970: INFO => create_response | api response: {'status': 'success', 'data': None}
api response: {'status': 'success', 'data': None}
2024-11-13 14:40:31,354: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:40:31,354: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
2024-11-13 14:40:31,356: INFO => wrapper | total time for total_otp_request: 0.0020411014556884766
total time for total_otp_request: 0.0020411014556884766
2024-11-13 14:40:31,356: INFO => wrapper | response from function: total_otp_request: 1
response from function: total_otp_request: 1
2024-11-13 14:40:31,356: INFO => reset_failed_login | resetting failed login count for user_id: 3
resetting failed login count for user_id: 3
2024-11-13 14:40:31,358: INFO => wrapper | creating otp for user
creating otp for user
2024-11-13 14:40:31,359: INFO => wrapper | create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
2024-11-13 14:40:31,359: INFO => wrapper | invalidating previously assigned otp(s) for user
invalidating previously assigned otp(s) for user
2024-11-13 14:40:31,359: INFO => wrapper | invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
2024-11-13 14:40:31,361: INFO => wrapper | total time for invalidate_previous_otp: 0.0015053749084472656
total time for invalidate_previous_otp: 0.0015053749084472656
2024-11-13 14:40:31,361: INFO => wrapper | response from function: invalidate_previous_otp: None
response from function: invalidate_previous_otp: None
2024-11-13 14:40:31,363: INFO => wrapper | total time for create_otp: 0.004073381423950195
total time for create_otp: 0.004073381423950195
2024-11-13 14:40:31,363: INFO => wrapper | response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x75c591eca680>
response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x75c591eca680>
2024-11-13 14:40:31,363: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:40:31,364: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x75c591fe3e50>, 'user_id': 3}
2024-11-13 14:40:31,367: INFO => wrapper | total time for total_otp_request: 0.003443479537963867
total time for total_otp_request: 0.003443479537963867
2024-11-13 14:40:31,368: INFO => wrapper | response from function: total_otp_request: 2
response from function: total_otp_request: 2
2024-11-13 14:40:31,376: INFO => create_response | api response: {'status': 'success', 'data': None}
api response: {'status': 'success', 'data': None}
2024-11-13 14:41:35,520: INFO => <module> | server started
server started
2024-11-13 14:41:43,972: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:41:43,972: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
2024-11-13 14:41:43,976: INFO => wrapper | total time for total_otp_request: 0.0037300586700439453
total time for total_otp_request: 0.0037300586700439453
2024-11-13 14:41:43,976: INFO => wrapper | response from function: total_otp_request: 2
response from function: total_otp_request: 2
2024-11-13 14:41:43,976: INFO => reset_failed_login | resetting failed login count for user_id: 3
resetting failed login count for user_id: 3
2024-11-13 14:41:43,981: INFO => wrapper | creating otp for user
creating otp for user
2024-11-13 14:41:43,981: INFO => wrapper | create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
2024-11-13 14:41:43,981: INFO => wrapper | invalidating previously assigned otp(s) for user
invalidating previously assigned otp(s) for user
2024-11-13 14:41:43,981: INFO => wrapper | invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
2024-11-13 14:41:43,984: INFO => wrapper | total time for invalidate_previous_otp: 0.0026788711547851562
total time for invalidate_previous_otp: 0.0026788711547851562
2024-11-13 14:41:43,984: INFO => wrapper | response from function: invalidate_previous_otp: None
response from function: invalidate_previous_otp: None
2024-11-13 14:41:43,991: INFO => wrapper | total time for create_otp: 0.00970149040222168
total time for create_otp: 0.00970149040222168
2024-11-13 14:41:43,991: INFO => wrapper | response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x7564e4964970>
response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x7564e4964970>
2024-11-13 14:41:43,991: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:41:43,991: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7a90>, 'user_id': 3}
2024-11-13 14:41:43,993: INFO => wrapper | total time for total_otp_request: 0.002271413803100586
total time for total_otp_request: 0.002271413803100586
2024-11-13 14:41:43,994: INFO => wrapper | response from function: total_otp_request: 3
response from function: total_otp_request: 3
2024-11-13 14:41:44,000: INFO => create_response | api response: {'status': 'success', 'data': {'otp_attempts_left': 2}}
api response: {'status': 'success', 'data': {'otp_attempts_left': 2}}
2024-11-13 14:42:01,480: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:42:01,480: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
2024-11-13 14:42:01,482: INFO => wrapper | total time for total_otp_request: 0.0018012523651123047
total time for total_otp_request: 0.0018012523651123047
2024-11-13 14:42:01,482: INFO => wrapper | response from function: total_otp_request: 0
response from function: total_otp_request: 0
2024-11-13 14:42:01,482: INFO => reset_failed_login | resetting failed login count for user_id: 3
resetting failed login count for user_id: 3
2024-11-13 14:42:01,483: INFO => wrapper | creating otp for user
creating otp for user
2024-11-13 14:42:01,483: INFO => wrapper | create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
create_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
2024-11-13 14:42:01,483: INFO => wrapper | invalidating previously assigned otp(s) for user
invalidating previously assigned otp(s) for user
2024-11-13 14:42:01,484: INFO => wrapper | invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
invalidate_previous_otp; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
2024-11-13 14:42:01,484: INFO => wrapper | total time for invalidate_previous_otp: 0.0009469985961914062
total time for invalidate_previous_otp: 0.0009469985961914062
2024-11-13 14:42:01,485: INFO => wrapper | response from function: invalidate_previous_otp: None
response from function: invalidate_previous_otp: None
2024-11-13 14:42:01,486: INFO => wrapper | total time for create_otp: 0.0024454593658447266
total time for create_otp: 0.0024454593658447266
2024-11-13 14:42:01,486: INFO => wrapper | response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x7564e49f0e20>
response from function: create_otp: <models.one_time_password.OneTimePasswordModel object at 0x7564e49f0e20>
2024-11-13 14:42:01,486: INFO => wrapper | getting total otp request for the user
getting total otp request for the user
2024-11-13 14:42:01,486: INFO => wrapper | total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
total_otp_request; args: (), kwargs: {'db': <sqlalchemy.orm.session.Session object at 0x7564e53e7b20>, 'user_id': 3}
2024-11-13 14:42:01,487: INFO => wrapper | total time for total_otp_request: 0.0012822151184082031
total time for total_otp_request: 0.0012822151184082031
2024-11-13 14:42:01,488: INFO => wrapper | response from function: total_otp_request: 1
response from function: total_otp_request: 1
2024-11-13 14:42:01,491: INFO => create_response | api response: {'status': 'success', 'data': {'otp_attempts_left': 4}}
api response: {'status': 'success', 'data': {'otp_attempts_left': 4}}
